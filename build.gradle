
buildscript {
    // prod and fast should only be used in CI.
    // if in CI, then rewrite repos to be used.
    if (project.hasProperty('prod') || project.hasProperty('fast')) {
        // apply from: "repos.gradle", to: project.buildscript
    }

    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: spring_boot_version
        classpath group: 'com.moowork.gradle', name: 'gradle-node-plugin', version: '0.11'
        classpath group: 'com.moowork.gradle', name: 'gradle-grunt-plugin', version: '0.11'
    }
}

// prod and fast should only be used in CI.
// if in CI, then rewrite repos to be used.
if (project.hasProperty('prod') || project.hasProperty('fast')) {
    // apply from: "repos.gradle"
}
apply plugin: 'groovy'
apply plugin: 'java'
sourceCompatibility=1.8
targetCompatibility=1.8
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'spring-boot'
apply plugin: 'jacoco'
apply plugin: 'sonar-runner'
apply plugin: 'findbugs'
apply plugin: 'war'

findbugs {
    ignoreFailures = true
}

bootRepackage {
    mainClass = 'com.sample.test.Application'
}

springBoot {
    mainClass = 'com.sample.test.Application'
}

bootRun {
    addResources = false
}

apply from: 'yeoman.gradle'

apply from: 'liquibase.gradle'

//apply from: 'gatling.gradle'

ext {
    repoUser = System.env["nexus_user"] ?: "NOT_SET"
    repoPassword = System.env["ci_cred"] ?: "NOT_SET"
    coporateRepoUrl = System.env["nexus_url"]?: "NOT_SET"
    buildNumber = System.env.BUILD_NUMBER ?: "NOT_SET"
    snapshot = "-SNAPSHOT"
}

if (project.hasProperty('release')) {
    apply from: 'profile_prod.gradle'
    apply from: 'profile_release.gradle'
} else if (project.hasProperty('prod')) {
    apply from: 'profile_prod.gradle'

} else if (project.hasProperty('fast')) {
    apply from: 'profile_fast.gradle'
}  else {
    apply from: 'profile_dev.gradle'
}

group = 'com.sample.test'
version = "0.1.${buildNumber}${snapshot}"


description = ''

configurations {
    providedRuntime
}

repositories {
//    def creds = getCredentials()
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://repo.spring.io/snapshot' }
    maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://repo.maven.apache.org/maven2' }
    mavenLocal()
}

dependencies {
    compile group: 'io.dropwizard.metrics', name: 'metrics-core'
    compile group: 'io.dropwizard.metrics', name: 'metrics-annotation', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-graphite', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-healthchecks', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-jvm', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-servlet', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-json', version: dropwizard_metrics_version
    compile (group: 'io.dropwizard.metrics', name: 'metrics-servlets', version: dropwizard_metrics_version) {
        exclude(module: 'metrics-healthchecks')
    }
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version: jackson_version
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hppc', version: jackson_version
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jackson_version
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: jackson_version
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate4', version: jackson_version
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jackson_version
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jackson_version
    compile (group: 'com.ryantenney.metrics', name: 'metrics-spring', version: metrics_spring_version) {
        exclude(module: 'metrics-core')
        exclude(module: 'metrics-healthchecks')
    }
    compile(group: 'com.zaxxer', name: 'HikariCP', version: HikariCP_version) {
        exclude(module: 'tools')
    }
    compile group: 'org.apache.commons', name: 'commons-lang3', version: commons_lang_version
    compile group: 'commons-io', name: 'commons-io', version: commons_io_version
    compile group: 'javax.inject', name: 'javax.inject', version: javax_inject_version
    compile group: 'javax.transaction', name: 'javax.transaction-api'
    compile group: 'joda-time', name: 'joda-time'
    compile group: 'joda-time', name: 'joda-time-hibernate', version: joda_time_hibernate_version
    compile group: 'org.apache.geronimo.javamail', name: 'geronimo-javamail_1.4_mail', version: geronimo_javamail_1_4_mail_version
    compile group: 'org.hibernate', name: 'hibernate-core', version: hibernate_entitymanager_version
    compile group: 'org.hibernate', name: 'hibernate-envers'
    compile (group: 'org.hibernate', name: 'hibernate-ehcache') {
        exclude(module: 'ehcache-core')
    }
	compile group: 'com.hazelcast', name: 'hazelcast', version: hazelcast_version
	compile group: 'com.hazelcast', name: 'hazelcast-hibernate4', version: hazelcast_version
	compile group: 'com.hazelcast', name: 'hazelcast-spring', version: hazelcast_version
	compile group: 'com.hazelcast', name: 'hazelcast-wm', version: hazelcast_version


    compile group: 'org.hibernate', name: 'hibernate-validator'
    compile group: 'org.jadira.usertype', name: 'usertype.core', version: usertype_core_version
    compile (group: 'org.liquibase', name: 'liquibase-core', version: liquibase_core_version) {
        exclude(module: 'jetty-servlet')
    }
    compile group: 'com.mattbertolini', name: 'liquibase-slf4j', version: liquibase_slf4j_version
    compile group: 'org.springframework.boot', name: 'spring-boot-actuator', version :spring_boot_version
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version :spring_boot_version
    compile group: 'org.springframework.boot', name: 'spring-boot-loader-tools', version :spring_boot_version
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version :spring_boot_version
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version :spring_boot_version
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version :spring_boot_version
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version :spring_boot_version
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version :spring_boot_version) {
        //exclude module: 'spring-boot-starter-tomcat'
    }

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version :spring_boot_version
	compile group: 'org.springframework.boot', name:'spring-boot-starter-mobile', version :spring_boot_version
    compile group: 'org.springframework.cloud', name: 'spring-cloud-cloudfoundry-connector'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-spring-service-connector'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-localconfig-connector'
    compile(group: 'org.springframework', name: 'spring-context-support') {
        exclude(module: 'quartz')
    }
	compile group: 'org.springframework.session', name:'spring-session', version: spring_session_version
    compile group: 'org.springframework.security', name: 'spring-security-config', version: spring_security_version
    compile group: 'org.springframework.security', name: 'spring-security-data', version: spring_security_version
    compile group: 'org.springframework.security', name: 'spring-security-web', version: spring_security_version
    compile group: 'org.springframework.security', name: 'spring-security-messaging', version: spring_security_version
    compile group: 'org.springframework.security', name: 'spring-security-test', version: spring_security_version
    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: spring_security_oauth2_version
    compile(group: 'com.mangofactory', name: 'swagger-springmvc', version: swagger_springmvc_version) {
        exclude(module: 'jackson-module-scala_2.10')
        exclude(module: 'scalap')
        exclude(module: 'scala-compiler')
    }
    compile group: 'mysql', name: 'mysql-connector-java', version: "5.+"
    compile group: 'org.codehaus.groovy',name:'groovy-all',version:groovy_version
    compile group: 'fr.ippon.spark.metrics', name: 'metrics-spark-reporter', version: metrics_spark_reporter_version
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: "2.+"
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: "2.+"
    compile group: 'org.bouncycastle', name: 'bcprov-jdk16', version: '1.45'
    compile group: 'com.github.fernandospr', name: 'javapns-jdk16', version: '2.2.1'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'
    compile group: 'com.h2database', name: 'h2', version: "1.+"
    testCompile group: 'com.jayway.awaitility', name: 'awaitility', version: awaility_version
    testCompile group: 'com.jayway.jsonpath', name: 'json-path'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version :spring_boot_version
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-jetty', version :spring_boot_version
    testCompile group: 'org.assertj', name: 'assertj-core-java8', version: assertj_core_version
    testCompile group: 'junit', name: 'junit', version: "4.+"
    testCompile group: 'org.mockito', name: 'mockito-core', version: "1.+"
    testCompile group: 'com.mattbertolini', name: 'liquibase-slf4j', version: liquibase_slf4j_version
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: "1.+"
    //testCompile group: 'io.gatling.highcharts', name: 'gatling-charts-highcharts', version: gatling_version
    testCompile group: 'org.spockframework',name:'spock-core',version:spock_version
    testCompile group: 'org.spockframework',name:'spock-spring',version:spock_version
    testCompile group: 'org.jvnet.mock-javamail', name:'mock-javamail', version:'1.9'
    testCompile group: 'com.h2database', name: 'h2'

}

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs += ["src/main/java"] // Let groovy compiler compile java code also.

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

//http://stackoverflow.com/questions/15406469/how-to-generate-html-output-using-gradle-findbugs-plugin
//http://gradle.org/docs/current/dsl/org.gradle.api.plugins.quality.FindBugsExtension.html
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

clean{
    delete "target"
}

publishing {

    publications {
        webApp(MavenPublication) {
            from components.web
        }
    }
    repositories {
        maven {
            url  coporateRepoUrl + coporateRepoPath

            credentials {
                username = repoUser
                password = repoPassword
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}
